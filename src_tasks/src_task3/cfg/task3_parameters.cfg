#!/usr/bin/env python

# Task3 parameters

PACKAGE='src_task3'

import roslib;
roslib.load_manifest(PACKAGE)
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
stairWalkPose = gen.add_group("stairWalkPose")
#                 Name       Type      Reconfiguration level      Description        Default  Min  Max
stairWalkPose.add("x_sw",     double_t,    0,                    "x of goal location",    2.828,  0,   10)
stairWalkPose.add("y_sw",     double_t,    0,                    "y of goal location",    0.292, -1,   1)
stairWalkPose.add("theta_sw", double_t,    0,                  "theta of goal location",  0.820, -1.57, 1.57)

handleCenter = gen.add_group("handleCenter")
#                 Name       Type      Reconfiguration level      Description        Default  Min  Max
handleCenter.add("x_hc",     double_t,    0,                    "x of door handle",    2.828,  0,   10)
handleCenter.add("y_hc",     double_t,    0,                    "y of door handle",    0.292, -1,   1)
handleCenter.add("z_hc",      double_t,    0,                    "z of door handle",    0.820, -1.57, 1.57)

tableWalkPose = gen.add_group("tableWalkPose")
#                 Name       Type      Reconfiguration level      Description        Default  Min  Max
tableWalkPose.add("x_tw",     double_t,    0,                    "x of goal location",    2.828,  0,   10)
tableWalkPose.add("y_tw",     double_t,    0,                    "y of goal location",    0.292, -1,   1)
tableWalkPose.add("theta_tw", double_t,    0,                  "theta of goal location",  0.820, -1.57, 1.57)

leakDetectorLoc = gen.add_group("leakDetectorLoc")
#                 Name       Type      Reconfiguration level      Description        Default  Min  Max
leakDetectorLoc.add("x_ld",     double_t,    0,                    "x of leak detector",    2.828,  0,   10)
leakDetectorLoc.add("y_ld",     double_t,    0,                    "y of leak detector",    0.292, -1,   1)
leakDetectorLoc.add("z_ld",     double_t,    0,                    "z of leak detector",  0.820, -1.57, 1.57)

leakWallPose = gen.add_group("leakWallPose")
#                 Name       Type      Reconfiguration level      Description        Default  Min  Max
leakWallPose.add("x_lw",     double_t,    0,                    "x of goal location",    2.828,  0,   10)
leakWallPose.add("y_lw",     double_t,    0,                    "y of goal location",    0.292, -1,   1)
leakWallPose.add("theta_lw", double_t,    0,                  "theta of goal location",  0.820, -1.57, 1.57)


leakLoc = gen.add_group("leakLoc")
#                 Name       Type      Reconfiguration level      Description        Default  Min  Max
leakLoc.add("x_l",     double_t,    0,                    "x of leak",    2.828,  0,   10)
leakLoc.add("y_l",     double_t,    0,                    "y of leak",    0.292, -1,   1)
leakLoc.add("z_l",     double_t,    0,                    "z of leak",  0.820, -1.57, 1.57)

repairToolLoc = gen.add_group("repairToolLoc")
#                 Name       Type      Reconfiguration level      Description        Default  Min  Max
repairToolLoc.add("x_rt",     double_t,    0,                    "x of repair tool",    2.828,  0,   10)
repairToolLoc.add("y_rt",     double_t,    0,                    "y of repair tool",    0.292, -1,   1)
repairToolLoc.add("z_rt",     double_t,    0,                    "z of repair tool",  0.820, -1.57, 1.57)

finishBoxWalkPose = gen.add_group("finishBoxWalkPose")
#                 Name       Type      Reconfiguration level      Description        Default  Min  Max
finishBoxWalkPose.add("x_fb",     double_t,    0,                    "x of goal location",    2.828,  0,   10)
finishBoxWalkPose.add("y_fb",     double_t,    0,                    "y of goal location",    0.292, -1,   1)
finishBoxWalkPose.add("theta_fb", double_t,    0,                  "theta of goal location",  0.820, -1.57, 1.57)

exit(gen.generate(PACKAGE, "dynamic_reconfigure_node", "task3_parameters"))
