<launch>
    <arg name="init" default="true"/>
    <arg name="extra_gazebo_args" default="" />
    <arg name="use_local_build" default="true" />

   <include file="$(find srcsim)/launch/unique_task1.launch">
      <arg name="init" value="$(arg init)" />
      <arg name="extra_gazebo_args" value="$(arg extra_gazebo_args)" />
      <arg name="use_local_build" value="$(arg use_local_build)" />
   </include>

   <rosparam param="self_see_links">[leftForearmLink, leftWristRollLink, leftPalm, leftThumbRollLink, leftThumbPitch1Link, leftThumbPitch2Link, leftThumbPitch3Link, upperNeckPitchLink, torso]</rosparam>

   <!-- Start spinning the lidar   @TODO: implement this using a parameter or check if one exists already-->
   <node pkg="rostopic" type="rostopic" name="rostopic" args="pub /multisense/set_spindle_speed -l std_msgs/Float64 2"/>

   <!-- Start val_laser2point_cloud_node to publish pointcloud2 data -->
   <node pkg="val_laser2point_cloud" type="val_laser2point_cloud_node" name="val_laser2point_cloud_node"/>

   <include file="$(find val_laser2point_cloud)/launch/laser_assembler.launch"/>

   <!-- Start stereo_image_proc to pusblish disparity image -->
   <node ns="/multisense/camera" name="stereo_proc" pkg="stereo_image_proc" type="stereo_image_proc" respawn="false" output="log">
   <param name="prefilter_size" type="int" value="11"/>
   <param name="prefilter_cap" type="int" value="40"/>
   <param name="correlation_window_size" type="int" value="91"/>
   <param name="min_disparity" type="int" value="0"/>
   <param name="disparity_range" type="int" value="64"/>
   <param name="uniqueness_ratio" type="double" value="4.0"/>
   <param name="approximate_sync" type="bool" value="false"/>

        <!--Stereo_algorithm StereoBM (0)
        prefilter_size = 11
        prefilter_cap = 40
        correlation_window_size = 91
        min_disparity = 0
        disparity_range = 64
        uniqueness_ratio = 4.0
        texture_threshold = 1000
        speckle_size = 200
        speckle_ratio = 4

        fullDP = false-->
        <!-- remap from="/multisense/camera/disparity" to="/multisense/left/disparity" / -->
        <remap from="/multisense/camera/points2" to="/multisense/image_points2" />
        </node>
<!--
    <node pkg="robot_self_filter" type="self_filter" name="robot_filter" output="screen">
        <param name="sensor_frame" type="str" value="/world" />
        <param name="use_rgb" type="bool" value="false"/>
        <remap from="/cloud_in" to="/assembled_cloud2"/>
        <remap from="/cloud_out" to="/assembled_filtered_cloud2"/>
    </node>-->

</launch>
